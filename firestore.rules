rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read and write their own data
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && (
        // Users can write to their own document
        request.auth.uid == userId ||
        // Allow admin users to create new documents (temporary for testing)
        (request.auth != null)
      );
    }
    
    // Events collection - allow admin users to manage events
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['teacher', 'mentor', 'admin'];
    }
    
    // Courses collection (workshops) - allow admin users to manage courses
    match /courses/{courseId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['teacher', 'mentor', 'admin'];
    }
    
    // Activities collection - temporarily allow all authenticated users for testing
    match /activities/{activityId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow users to read public data
    match /public/{document=**} {
      allow read: if true;
    }
    
    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}